---
# Define Role that allows operations on K8s pods/deployments
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: openebs-cstor-operator
rules:
- apiGroups: ["*"]
  resources: ["nodes", "nodes/proxy"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["namespaces", "services", "pods", "deployments", "deployments/finalizers", "replicationcontrollers", "replicasets", "events", "endpoints", "configmaps", "secrets", "jobs", "cronjobs"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["statefulsets", "daemonsets"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["resourcequotas", "limitranges"]
  verbs: ["list", "watch"]
- apiGroups: ["*"]
  resources: ["certificatesigningrequests"]
  verbs: ["list", "watch"]
- apiGroups: ["*"]
  resources: ["storageclasses", "persistentvolumeclaims", "persistentvolumes"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: [ "get", "list", "create", "update", "delete", "patch"]
- apiGroups: ["openebs.io"]
  resources: ["*"]
  verbs: ["*" ]
- apiGroups: ["cstor.openebs.io"]
  resources: ["*"]
  verbs: ["*" ]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
  verbs: ["get", "create", "list", "delete", "update", "patch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
- apiGroups: ["*"]
  resources: ["upgradetasks"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["poddisruptionbudgets"]
  verbs: ["get", "list", "create", "delete", "watch"]
---
# Bind the Service Account with the Role Privileges.
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: openebs-cstor-operator
subjects:
- kind: ServiceAccount
  name: openebs-maya-operator
  namespace: openebs
roleRef:
  kind: ClusterRole
  name: openebs-cstor-operator
  apiGroup: rbac.authorization.k8s.io
---
# Define Role that allows operations required for migration of snapshots
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: openebs-cstor-migration
rules:
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshotclasses"]
  verbs: ["get", "list"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshotcontents"]
  verbs: ["create", "get", "list"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshots"]
  verbs: ["create", "get", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: openebs-cstor-migration
subjects:
- kind: ServiceAccount
  name: openebs-maya-operator
  namespace: openebs
roleRef:
  kind: ClusterRole
  name: openebs-cstor-migration
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: storage.k8s.io/v1beta1
kind: CSIDriver
metadata:
  name: cstor.csi.openebs.io
spec:
  # Supports persistent inline volumes.
  volumeLifecycleModes:
  - Persistent
  # Not yet supported but added just to support upgrade control plane seamlessly
  - Ephemeral
  # To determine at runtime which mode a volume uses, pod info and its
  # "csi.storage.k8s.io/ephemeral" entry are needed.
  podInfoOnMount: true
  attachRequired: true
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openebs-cstor-csi-snapshotter-binding
subjects:
  - kind: ServiceAccount
    name: openebs-cstor-csi-controller-sa
    namespace: openebs
roleRef:
  kind: ClusterRole
  name: openebs-cstor-csi-snapshotter-role
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openebs-cstor-csi-snapshotter-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["update"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots/status"]
    verbs: ["update"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["create", "list", "watch", "delete", "get", "update"]

---
##############################################
###########                       ############
###########   Controller plugin   ############
###########                       ############
##############################################
kind: ServiceAccount
apiVersion: v1
metadata:
  name: openebs-cstor-csi-controller-sa
  namespace: openebs
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openebs-cstor-csi-provisioner-role
rules:
  - apiGroups: [""]
    resources: ["secrets", "namespaces"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes", "services"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses", "csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]

  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["*"]
  - apiGroups: ["*"]
    resources: ["cstorvolumeattachments", "cstorvolumes","cstorvolumeconfigs"]
    verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openebs-cstor-csi-provisioner-binding
subjects:
  - kind: ServiceAccount
    name: openebs-cstor-csi-controller-sa
    namespace: openebs
roleRef:
  kind: ClusterRole
  name: openebs-cstor-csi-provisioner-role
  apiGroup: rbac.authorization.k8s.io
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: openebs-cstor-csi-controller
  namespace: openebs
  labels:
    name: openebs-cstor-csi-controller
    openebs.io/component-name: openebs-cstor-csi-controller
    openebs.io/version: 2.1.0
spec:
  selector:
    matchLabels:
      app: openebs-cstor-csi-controller
      role: openebs-cstor-csi
      name: openebs-cstor-csi-controller
      openebs.io/component-name: openebs-cstor-csi-controller
  serviceName: "openebs-csi"
  replicas: 1
  template:
    metadata:
      labels:
        app: openebs-cstor-csi-controller
        role: openebs-cstor-csi
        name: openebs-cstor-csi-controller
        openebs.io/component-name: openebs-cstor-csi-controller
        openebs.io/version: 2.1.0
    spec:
      priorityClassName: system-cluster-critical
      serviceAccount: openebs-cstor-csi-controller-sa
      containers:
        - name: csi-resizer
          image: "{{ .Values.csiResizer.image.organization }}/{{ .Values.csiResizer.image.repository }}:{{ .Values.csiResizer.image.tag }}"
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-snapshotter
          image: "{{ .Values.csiSnapshotter.image.organization }}/{{ .Values.csiSnapshotter.image.repository }}:{{ .Values.csiSnapshotter.image.tag }}"
          args:
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: snapshot-controller
          image: "{{ .Values.snapshotController.image.organization }}/{{ .Values.snapshotController.image.repository }}:{{ .Values.snapshotController.image.tag }}"
          args:
            - "--v=5"
            - "--leader-election=false"
          imagePullPolicy: IfNotPresent
        - name: csi-provisioner
          image: quay.io/k8scsi/csi-provisioner:v1.6.0
          imagePullPolicy: IfNotPresent
          args:
            - "--provisioner=cstor.csi.openebs.io"
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--feature-gates=Topology=true"
            - "--extra-create-metadata=true"
          env:
            - name: MY_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-attacher
          image: quay.io/k8scsi/csi-attacher:v2.0.0
          imagePullPolicy: IfNotPresent
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-cluster-driver-registrar
          image: quay.io/k8scsi/csi-cluster-driver-registrar:v1.0.1
          imagePullPolicy: IfNotPresent
          args:
            - "--v=5"
            - "--driver-requires-attachment=true"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: cstor-csi-plugin
          image: openebs/cstor-csi-driver:2.1.0
          imagePullPolicy: IfNotPresent
          env:
            - name: OPENEBS_CONTROLLER_DRIVER
              value: controller
            - name: OPENEBS_CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            - name: OPENEBS_CSI_API_URL
              value: https://openebs.io
              # OpenEBS namespace where the openebs cstor operator components
              # has been installed
            - name: OPENEBS_NAMESPACE
              value: openebs
            - name: OPENEBS_IO_INSTALLER_TYPE
              value: "cstor-operator"
            - name: OPENEBS_IO_ENABLE_ANALYTICS
              value: "true"
          args :
            - "--endpoint=$(OPENEBS_CSI_ENDPOINT)"
            - "--url=$(OPENEBS_CSI_API_URL)"
            - "--plugin=$(OPENEBS_CONTROLLER_DRIVER)"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
      volumes:
        - name: socket-dir
          emptyDir: {}
---
############################## CSI- Attacher #######################
# Attacher must be able to work with PVs, nodes and VolumeAttachments
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openebs-cstor-csi-attacher-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["csi.storage.k8s.io"]
    resources: ["csinodeinfos"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments", "csinodes"]
    verbs: ["get", "list", "watch", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openebs-cstor-csi-attacher-binding
subjects:
  - kind: ServiceAccount
    name: openebs-cstor-csi-controller-sa
    namespace: openebs
roleRef:
  kind: ClusterRole
  name: openebs-cstor-csi-attacher-role
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openebs-cstor-csi-cluster-registrar-role
rules:
  - apiGroups: ["csi.storage.k8s.io"]
    resources: ["csidrivers"]
    verbs: ["create", "delete"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openebs-cstor-csi-cluster-registrar-binding
subjects:
  - kind: ServiceAccount
    name: openebs-cstor-csi-controller-sa
    namespace: openebs
roleRef:
  kind: ClusterRole
  name: openebs-cstor-csi-cluster-registrar-role
  apiGroup: rbac.authorization.k8s.io
---
########################################
###########                 ############
###########   Node plugin   ############
###########                 ############
########################################
apiVersion: v1
kind: ServiceAccount
metadata:
  name: openebs-cstor-csi-node-sa
  namespace: openebs
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openebs-cstor-csi-registrar-role
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumes", "nodes", "services"]
    verbs: ["get", "list", "patch"]
  - apiGroups: ["*"]
    resources: ["cstorvolumeattachments", "cstorvolumes","cstorvolumeconfigs"]
    verbs: ["get", "list", "watch", "create", "update", "delete", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: openebs-cstor-csi-registrar-binding
subjects:
  - kind: ServiceAccount
    name: openebs-cstor-csi-node-sa
    namespace: openebs
roleRef:
  kind: ClusterRole
  name: openebs-cstor-csi-registrar-role
  apiGroup: rbac.authorization.k8s.io
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: openebs-cstor-csi-iscsiadm
  namespace: openebs
data:
  iscsiadm: |
    #!/bin/sh
    if [ -x /host/sbin/iscsiadm ]; then
      chroot /host /sbin/iscsiadm "$@"
    elif [ -x /host/usr/local/sbin/iscsiadm ]; then
      chroot /host /usr/local/sbin/iscsiadm "$@"
    elif [ -x /host/bin/iscsiadm ]; then
      chroot /host /bin/iscsiadm "$@"
    elif [ -x /host/usr/local/bin/iscsiadm ]; then
      chroot /host /usr/local/bin/iscsiadm "$@"
    else
      chroot /host iscsiadm "$@"
    fi
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: openebs-cstor-csi-node
  namespace: openebs
  labels:
    app: openebs-cstor-csi-node
    name: openebs-cstor-csi-node
    openebs.io/component-name: openebs-cstor-csi-node
    openebs.io/version: 2.1.0
spec:
  selector:
    matchLabels:
      app: openebs-cstor-csi-node
      role: openebs-cstor-csi
      name: openebs-cstor-csi-node
      openebs.io/component-name: openebs-cstor-csi-node
  template:
    metadata:
      labels:
        app: openebs-cstor-csi-node
        role: openebs-cstor-csi
        name: openebs-cstor-csi-node
        openebs.io/component-name: openebs-cstor-csi-node
        openebs.io/version: 2.1.0
    spec:
      priorityClassName: system-node-critical
      serviceAccount: openebs-cstor-csi-node-sa
      hostNetwork: true
      containers:
        - name: csi-node-driver-registrar
          image: quay.io/k8scsi/csi-node-driver-registrar:v1.0.1
          imagePullPolicy: IfNotPresent
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/cstor.csi.openebs.io /registration/cstor.csi.openebs.io-reg.sock"]
          env:
            - name: ADDRESS
              value: /plugin/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/cstor.csi.openebs.io/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NODE_DRIVER
              value: openebs-cstor-csi
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: registration-dir
              mountPath: /registration
        - name: cstor-csi-plugin
          securityContext:
            privileged: true
            capabilities:
              add: ["CAP_MKNOD", "CAP_SYS_ADMIN", "SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: openebs/cstor-csi-driver:2.1.0
          imagePullPolicy: IfNotPresent
          args:
            - "--nodeid=$(OPENEBS_NODE_ID)"
            - "--endpoint=$(OPENEBS_CSI_ENDPOINT)"
            - "--url=$(OPENEBS_CSI_API_URL)"
            - "--plugin=$(OPENEBS_NODE_DRIVER)"
          env:
            - name: OPENEBS_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OPENEBS_CSI_ENDPOINT
              value: unix:///plugin/csi.sock
            - name: OPENEBS_NODE_DRIVER
              value: node
            - name: OPENEBS_CSI_API_URL
              value: https://openebs.io
              # OpenEBS namespace where the openebs cstor operator components
              # has been installed
            - name: OPENEBS_NAMESPACE
              value: openebs
              # Enable/Disable auto-remount feature, when volumes
              # recovers form the read-only state
            - name: REMOUNT
              value: "false"
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: device-dir
              mountPath: /dev
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/
              # needed so that any mounts setup inside this container are
              # propagated back to the host machine.
              mountPropagation: "Bidirectional"
            - name: host-root
              mountPath: /host
              mountPropagation: "HostToContainer"
            - name: chroot-iscsiadm
              mountPath: /sbin/iscsiadm
              subPath: iscsiadm
      volumes:
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/cstor.csi.openebs.io/
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet/
            type: Directory
        - name: chroot-iscsiadm
          configMap:
            defaultMode: 0555
            name: openebs-cstor-csi-iscsiadm
        - name: host-root
          hostPath:
            path: /
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cspc-operator
  namespace: openebs
  labels:
    name: cspc-operator
    openebs.io/component-name: cspc-operator
    openebs.io/version: 2.1.0
spec:
  selector:
    matchLabels:
      name: cspc-operator
      openebs.io/component-name: cspc-operator
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: cspc-operator
        openebs.io/component-name: cspc-operator
        openebs.io/version: 2.1.0
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
      - name: cspc-operator
        imagePullPolicy: IfNotPresent
        image: "{{ .Values.cspcOperator.image.organization }}/{{ .Values.cspcOperator.image.repository }}:{{ .Values.cspcOperator.image.tag }}"
        env:
        - name: OPENEBS_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPENEBS_SERVICEACCOUNT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: CSPC_OPERATOR_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        # OPENEBS_IO_BASE_DIR is used to configure base directory for openebs on host path.
        # Where OpenEBS can store required files. Default base path will be /var/openebs
        # - name: OPENEBS_IO_BASE_DIR
        #   value: "/var/openebs"
        # OPENEBS_IO_CSTOR_POOL_SPARSE_DIR can be used to specify the hostpath
        # to be used for saving the shared content between the side cars
        # of cstor pool pod. This ENV is also used to indicate the location
        # of the sparse devices.
        # The default path used is /var/openebs/sparse
        #- name: OPENEBS_IO_CSTOR_POOL_SPARSE_DIR
        #  value: "/var/openebs/sparse"
        - name: OPENEBS_IO_CSPI_MGMT_IMAGE
          value: "{{ .Values.cstor.poolMgmt.image.organization }}/{{ .Values.cstor.poolMgmt.image.repository }}:{{ .Values.cstor.poolMgmt.image.tag }}"
        - name: OPENEBS_IO_CSTOR_POOL_IMAGE
          value: "{{ .Values.cstor.pool.image.organization }}/{{ .Values.cstor.pool.image.repository }}:{{ .Values.cstor.pool.image.tag }}"
        - name:  OPENEBS_IO_CSTOR_POOL_EXPORTER_IMAGE
          value: "openebs/m-exporter:2.1.0"
        - name: RESYNC_INTERVAL
          value: "30"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cvc-operator
  namespace: openebs
  labels:
    name: cvc-operator
    openebs.io/component-name: cvc-operator
    openebs.io/version: 2.1.0
spec:
  selector:
    matchLabels:
      name: cvc-operator
      openebs.io/component-name: cvc-operator
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: cvc-operator
        openebs.io/component-name: cvc-operator
        openebs.io/version: 2.1.0
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
      - name: cvc-operator
        imagePullPolicy: IfNotPresent
        image: "{{ .Values.cvcOperator.image.organization }}/{{ .Values.cvcOperator.image.repository }}:{{ .Values.cvcOperator.image.tag }}"
        env:
        # OPENEBS_IO_BASE_DIR is used to configure base directory for openebs on host path.
        # Where OpenEBS can store required files. Default base path will be /var/openebs
        # - name: OPENEBS_IO_BASE_DIR
        #   value: "/var/openebs"
        # OPENEBS_IO_CSTOR_TARGET_DIR can be used to specify the hostpath
        # that to be used for saving the core dump of cstor volume pod.
        # The default path used is /var/openebs/sparse
        #- name: OPENEBS_IO_CSTOR_TARGET_DIR
        #  value: "/var/openebs/sparse"
        - name: OPENEBS_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPENEBS_SERVICEACCOUNT_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: OPENEBS_IO_CSTOR_TARGET_IMAGE
          value: "{{ .Values.cstor.target.image.organization }}/{{ .Values.cstor.target.image.repository }}:{{ .Values.cstor.target.image.tag }}"
        - name:  OPENEBS_IO_CSTOR_VOLUME_MGMT_IMAGE
          value: "openebs/cstor-volume-manager-amd64:2.1.0"
        - name:  OPENEBS_IO_VOLUME_MONITOR_IMAGE
          value: "{{ .Values.policies.monitoring.image.organization }}/{{ .Values.policies.monitoring.image.repository }}:{{ .Values.policies.monitoring.image.tag }}"
---
apiVersion: v1
kind: Service
metadata:
  name: cvc-operator-service
  namespace: openebs
  labels:
    openebs.io/component-name: cvc-operator-svc
spec:
  ports:
  - name: api
    port: 5757
    protocol: TCP
    targetPort: 5757
  selector:
    name: cvc-operator
  sessionAffinity: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openebs-cstor-admission-server
  namespace: openebs
  labels:
    app: cstor-admission-webhook
    openebs.io/component-name: cstor-admission-webhook
    openebs.io/version: 2.1.0
spec:
  replicas: 1
  strategy:
    type: Recreate
    rollingUpdate: null
  selector:
    matchLabels:
      app: cstor-admission-webhook
  template:
    metadata:
      labels:
        app: cstor-admission-webhook
        openebs.io/component-name: cstor-admission-webhook
        openebs.io/version: 2.1.0
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
        - name: admission-webhook
          image: openebs/cstor-webhook-amd64:2.1.0
          imagePullPolicy: IfNotPresent
          args:
            - -alsologtostderr
            - -v=2
            - 2>&1
          env:
            - name: OPENEBS_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ADMISSION_WEBHOOK_NAME
              value: "openebs-cstor-admission-server"
            - name: ADMISSION_WEBHOOK_FAILURE_POLICY
              value: "Fail"