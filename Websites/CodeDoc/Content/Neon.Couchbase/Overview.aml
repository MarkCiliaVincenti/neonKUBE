<?xml version="1.0" encoding="utf-8"?>
<!-- topic-filename="Neon.Couchbase-Overview" -->
<topic id="c9653350-5d9c-4629-bdba-3d05286dadc7" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
    </introduction>

    <section address="summary">
      <content>
        <para>
          The <legacyBold>Neon.Couchbase</legacyBold> package extends the standard Couchbase <codeInline>IBucket</codeInline>
          interface with dozens of new methods.  These fall into three groups: entirely new <legacyBold>safe methods</legacyBold>,
          new overrides of existing bucket methods and a handful of new index related methods like 
          <codeEntityReference qualifyHint="false" autoUpgrade="true">M:Couchbase.CouchbaseExtensions.ListIndexesAsync(Couchbase.Core.IBucket)</codeEntityReference>
        </para>
        <para>
          The new safe methods are designed to be easy to use by just returning the result of the operation without any
          error information.  The safe methods check for errors internally and automatically retry operations that 
          experienced a transient error.  The new safe can dramatically reduce the amount of boilerplate code you'll
          need and can make your code more readable and resilient. 
        </para>
        <para>
          The new overrides for existing Couchbase methods add support for the Neon <codeEntityReference qualifyHint="false">T:Neon.Data.IPersistableType</codeEntityReference>
          interface type which abstracts key generation, type identification, and serialization abstractions.  These seemlessly supports
          data types generated by the <codeEntityReference qualifyHint="false">N:Neon.ModelGen</codeEntityReference> package.
        </para>
        <para>
          This package also includes the <codeEntityReference qualifyHint="false">T:Neon.Data.CouchbaseSettings</codeEntityReference>
          class which manages Couchbase connection setting serialization to/from JSON and YAML, providing a standard way to specify
          Couchbase settings as configuration files.
        </para>
      </content>
    </section>

    <relatedTopics>
      <externalLink>
        <linkText>Neon Couchbase namespace documentation</linkText>
        <linkUri>https://doc.neonkube.com/N_Couchbase.htm</linkUri>
      </externalLink>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
