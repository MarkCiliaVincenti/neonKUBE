<?xml version="1.0" encoding="utf-8"?>
<!-- topic-filename="Neon.Temporal-Workflow-Options" -->
<topic id="e74d1092-9a9d-429f-bbe2-7ad595d7a6fe" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
    </introduction>

    <section>
      <content>
        <para>
          You can customize how workflows are started by passing <codeEntityReference qualifyHint="false">T:Neon.Temporal.WorkflowOptions</codeEntityReference>
          when creating an external workflow stub or a <codeEntityReference qualifyHint="false">T:Neon.Temporal.ChildWorkflowOptions</codeEntityReference>
          when creating a child workflow stub.  These types are similar and you can use them to customize the workflow ID, timeouts, retry options, etc.
        </para>
        <para>
          The code sample below starts a workflow with a specific ID and also specifies how long the workflow will be allowed to run:
        </para>
        <code source="%NF_SNIPPETS%\Temporal\Snippets.Temporal.HelloWorld\WorkflowOptions.cs" region="code" language="c#" tabSize="4"/>
        <para>
          You can also specify default workflow options for a <codeEntityReference qualifyHint="false">T:Neon.Temporal.TemporalClient</codeEntityReference>
          via <codeEntityReference qualifyHint="false">T:Neon.Temporal.TemporalSettings</codeEntityReference> or via the 
          <codeEntityReference qualifyHint="false">T:Neon.Temporal.WorkflowInterfaceAttribute</codeEntityReference> tagging your
          workflow interface.  Here's how the .NET client processes these: 
        </para>
        <list class="ordered">
          <listItem>
            <para>
              <codeEntityReference qualifyHint="false">T:Neon.Temporal.WorkflowOptions</codeEntityReference> or 
              <codeEntityReference qualifyHint="false">T:Neon.Temporal.ChildWorkflowOptions</codeEntityReference> passed when
              starting a workflow take precedence over all other options.
            </para>
          </listItem>
          <listItem>
            <para>
              Options specified via the <codeInline>WorkflowInterface</codeInline> attribute are recognized next.
            </para>
          </listItem>
          <listItem>
            <para>
              Client options specified by <codeEntityReference qualifyHint="false">T:Neon.Temporal.TemporalSettings</codeEntityReference>
              have the lowest precedence.
            </para>
          </listItem>
        </list>
      </content>
    </section>

    <relatedTopics>
      <codeEntityReference qualifyHint="false">N:Neon.Temporal</codeEntityReference>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
