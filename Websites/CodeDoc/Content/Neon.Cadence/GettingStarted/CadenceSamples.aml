<?xml version="1.0" encoding="utf-8"?>
<!-- topic-filename="Neon.Cadence-GettingStarted-Samples" -->
<topic id="f1fd2005-7e8f-4d93-8278-5752d1576cd4" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
      <para>
        This page describes our Cadence samples GitHub repository as well as the Xunit
        <codeEntityReference qualifyHint="false">F:Neon.Xunit.Cadence.CadenceFixture</codeEntityReference>
        we use to run these samples and our unit tests against Cadence running as a local
        Docker container.
      </para>
    </introduction>

    <section>
      <title>Cadence Samples</title>
      <content>
        <para>
          We're making some sample Cadence applications and unit tests available in our
          <externalLink>
            <linkText>nforgeio/cadence-samples</linkText>
            <linkUri>https://github.com/nforgeio/cadence-samples</linkUri>
          </externalLink>
          GitHub repository.  These have been tested on Windows 10 and a later version
          of OS/X using Visual Studio 2019 for Windows or Mac.  There's a decent chance
          that Visual Studio Code may work as well.  We have not tested these sample
          projects on Linux yet.
        </para>
      </content>
    </section>

    <section>
      <title>Cadence Xunit test fixture</title>
      <content>
        <para>
          The Uber Java and Go Cadence clients provide in-memory emulations of Cadence
          server functionality for unit testing workflows and activities.  The .NET client
          doesn't support this yet, but we'll be looking into adding this in the future.
          In the meantime, you can reference the <legacyBold>Neon.Xunit.Cadence</legacyBold> 
          nugate package in your unit test projects and use the
          <codeEntityReference qualifyHint="false">F:Neon.Xunit.Cadence.CadenceFixture</codeEntityReference>
          to quickly spin up a 
          <externalLink>
            <linkText>nkubio/cadence-dev</linkText>
            <linkUri>https://hub.docker.com/repository/docker/nkubeio/cadence-dev</linkUri>
          </externalLink>
          Docker container on your local workstation so that you can run your
          tests.  This Docker image includes the Cadence backend and UX services with
          a Cassandra database, including everything you'll need to run your workflows
          and activities.
        </para>
        <alert class="warning">
          <para>
            On Windows, we had to increase the Docker CPU setting from 2 to 4 CPUs and
            the RAM allocated to Docker from 2GiB to 4 GiB.  The original settings didn't
            provide enough resources for the three combined services to run reliably.
            This means your Windows workstation will require about 8GiB of RAM and
            at least 3 CPU cores.
          </para>
          <para>
            This is less of an issue for OS/X and Linux, because Docker is implemented
            natively for those operating systems as opposed to the Hyper-V currently
            required for Windows Docker.
          </para>
        </alert>
        <para>
          You'll find examples using <codeEntityReference qualifyHint="false">F:Neon.Xunit.Cadence.CadenceFixture</codeEntityReference>
          in our samples reporistory:
          <externalLink>
            <linkText>nkubio/cadence-dev</linkText>
            <linkUri>https://hub.docker.com/repository/docker/nkubeio/cadence-dev</linkUri>
          </externalLink>
        </para>
      </content>
    </section>

    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
