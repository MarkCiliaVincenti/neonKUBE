<?xml version="1.0" encoding="utf-8"?>
<!-- topic-filename="Neon.Cadence-Workflow-ChildWorkflows" -->
<topic id="cd6968a4-2e65-48fb-ad94-bb11e19d3b71" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
    </introduction>

    <section>
      <content>
        <para>
          Cadence lets workflows call other workflows.  These are known as <legacyBold>child workflows</legacyBold>.
          The example below shows how to do this:
        </para>
        <code source="%NF_SNIPPETS%\Cadence\Snippets.Cadence.HelloWorld\ChildWorkflow.cs" region="code" language="c#" tabSize="4"/>
        <para>
          This sample defines an activity and two workflows: <codeInline>IEmailActivity</codeInline>,
          <codeInline>IEmailWorkflow</codeInline>, and <codeInline>IParentWorkfow</codeInline>.  The parent
          workflow calls <codeInline>IEmailActivity</codeInline> as a child workflow which uses the activity
          to send emails.  Then after the child workflow is finished, the parent workflow calls the activity
          to send an email to the administrator indicating that the operation is complete.
        </para>
        <alert address="note">
          <para>
            The <codeEntityReference qualifyHint="false">P:Neon.Cadence.WorkflowBase.Workflow</codeEntityReference> property
            inherited by all workflow classes provides access to lots of workflow related functionality including logging,
            child workflow and activity stub creation, workflow version management as well as workflow-safe utilities
            for time/sleep, UUIDs, random numbers, etc.
          </para>
          <para>
            These same capabilities are available in code outside of the workflow class via the
            <codeEntityReference qualifyHint="false">P:Workflow.Current</codeEntityReference> property.
            Note that this property is implemented internally via <codeEntityReference qualifyHint="false">T:System.Threading.AsyncLocal`1</codeEntityReference>.
            This makes it possible to implement workflow libraries. 
          </para>
        </alert>
      </content>
    </section>

    <relatedTopics>
      <codeEntityReference qualifyHint="false">N:Neon.Cadence</codeEntityReference>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
