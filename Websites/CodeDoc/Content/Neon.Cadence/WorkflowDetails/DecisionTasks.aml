<?xml version="1.0" encoding="utf-8"?>
<!-- topic-filename="Neon.Cadence-Workflow-DecisionTaskss" -->
<topic id="a9dc6ead-a44f-487f-9c67-d954abbc12cb" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
    </introduction>

    <section>
      <content>
        <para>
          The official Uber Cadence documentation talks about <legacyBold>decision tasks</legacyBold> without ever
          really describing what these are and Cadence does its best to hide decision tasks from the workflow developer.
        </para>
        <para>
          A decision task is workflow logic that executed between Cadence operations that will be recorded to
          the workflow history.  Cadence records calls to activities, child workflows, as well calls to many of the of the
          <codeEntityReference qualifyHint="false">T:Neon.Cadence.Workflow</codeEntityReference> methods to
          the history.  One way to think about this is that workflows interact with the outside world via
          activities, child workflows or methods provided by <codeEntityReference qualifyHint="false">T:Neon.Cadence.Workflow</codeEntityReference>
          which all record to the workflow history.  Based on the results of this operation, the workflow will
          decide what to do next: call other activities or workflows, sleep, or just return.  That decision
          logic is the decision task.
        </para>
        <para>
          By default, Cadence requires that every workflow decision task be completed within in 10 seconds
          (this can be extended to a maximium of 60 seconds via a workflow option).  You must code your workflows
          to just coordinate activities and child workflows rather than trying to implement complex logic
          directly so that you'll be safely within this time limit.  Cadence will fail and restart workflows
          with slow decision tasks. 
        </para>
        <para>
          Cadence implicitly uses this timeout as a liveliness test: workflows that take longer than this
          are considered to be unhealthy.  This could happen if the host machine is overloaded, out of RAM,
          etc.
        </para>
      </content>
    </section>

    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
