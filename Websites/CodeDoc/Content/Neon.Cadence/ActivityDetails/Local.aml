<?xml version="1.0" encoding="utf-8"?>
<!-- topic-filename="Neon.Cadence-Activity-Local" -->
<topic id="58aa9345-7eb8-4087-9648-6775bc1352e9" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <introduction>
    </introduction>

    <section>
      <content>
        <para>
          Cadence supports <legacyBold>local activities</legacyBold> which can be more convienent to use.
          Local activities don't need to be registered like normal activities and they are always executed
          on the same machine as the calling workflow so they may be somewhat more performant.
        </para>
        <para>
          Here's an example of a workflow executing a local activity:
        </para>
        <code source="%NF_SNIPPETS%\Cadence\Snippets.Cadence.HelloWorld\LocalActivity.cs" region="code" language="c#" tabSize="4"/>
        <para>
          First, notice that we didn't specify a task list in the <codeInline>[ActivityInterface]</codeInline>
          attribute this time.   This is no necessary for local activities because these always run on on the
          same machine as the workflow.  Next, notice that we're using 
          <codeEntityReference qualifyHint="false" autoUpgrade="true">M:Neon.Cadence.Workflow.NewActivityStub``1(Neon.Cadence.ActivityOptions)</codeEntityReference>
          to create the local activity stub, specifying the activity interface as well as the implementation
          class.  The workflow can then call the local action stub just like it could for normal activities.
        </para>
        <para>
          Local activities work almost the same as normal ones, the only real difference is that heartbeats and
          checkpoints don't work for local activities because Cadence is tracking these differently than normal
          activities.
        </para>
        <para>
          It's very common for most of your activities to executed locally, especially for activities that are
          really just internal workflow related operations.
        </para>
      </content>
    </section>

    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
