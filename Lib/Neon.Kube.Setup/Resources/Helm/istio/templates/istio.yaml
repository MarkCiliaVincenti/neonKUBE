apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  namespace: {{ .Release.Namespace }}
  name: neon-ingress-istio
spec:
  namespace: {{ .Release.Namespace }}
  hub: {{ .Values.images.organization }}
  tag: {{ .Values.images.istio.tag }}
  meshConfig:
    rootNamespace: {{ .Release.Namespace }}
    enablePrometheusMerge: false
    accessLogFile: "/dev/stdout"
    accessLogFormat: '{"authority":"%REQ(:AUTHORITY)%","client_ip":"%REQ(X-FORWARDED-FOR)%","forwarded_host":"%REQ(X-FORWARDED-HOST)%","forwarded_proto":"%REQ(X-FORWARDED-PROTO)%","host":"%REQ(:Host)%","method":"%REQ(:METHOD)%","mode":"%PROTOCOL%","path":"%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%","referer":"%REQ(:Referer)%","request_id":"%REQ(X-REQUEST-ID)%","requested_server_name":"%REQUESTED_SERVER_NAME%","response_code":"%RESPONSE_CODE%","trace_id":"%REQ(x-b3-traceid)%","user_agent":"%REQ(USER-AGENT)%"}'
    accessLogEncoding: "JSON"
    #accessLogFormat: >
    #  [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%
    #  %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS%
    #  %CONNECTION_TERMINATION_DETAILS% "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
    #  %BYTES_RECEIVED% %BYTES_SENT% %DURATION%
    #  %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
    #  "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%"
    #  "%UPSTREAM_HOST%" %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS%
    #  %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS%
    #  %REQUESTED_SERVER_NAME% %ROUTE_NAME% traceID=%REQ(x-b3-traceid)%
    defaultConfig:
      tracing:
        sampling: 100.0
        max_path_tag_length: 256
        zipkin:
          address: grafana-agent-node.neon-monitor.svc:9411
    enableTracing: true
    extensionProviders:
      - envoyExtAuthzHttp:
          headersToDownstreamOnDeny:
            - content-type
            - set-cookie
          headersToUpstreamOnAllow:
            - authorization
            - path
            - x-auth-request-user
            - x-auth-request-email
            - x-auth-request-access-token
          includeHeadersInCheck:
            - authorization
            - cookie
          port: '4180'
          service: neon-sso-oauth2-proxy.neon-system.svc.cluster.local
        name: neon-sso-service
  components:
    pilot:
      k8s:
        env:
          - name: "GOGC"
            value: "25"
        priorityClassName: {{ .Values.priorityClassName }}
        resources:
          requests:
            cpu: "{{ .Values.resources.pilot.requests.cpu }}"
            memory: "{{ .Values.resources.pilot.requests.memory }}"
        hpaSpec:
          maxReplicas: 1
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        env:
          - name: "GOGC"
            value: "25"
        priorityClassName: {{ .Values.priorityClassName }}
        overlays:
          - apiVersion: apps/v1
            kind: Deployment
            name: istio-ingressgateway
            patches:
              - path: kind
                value: DaemonSet
              - path: spec.strategy
        hpaSpec:
          maxReplicas: 1
        service:
          {{- with .Values.nodePorts }}
            ports:
              {{- toYaml . | nindent 14 }}
          {{- end }}
        resources:
          requests:
            cpu: "{{ .Values.resources.ingress.requests.cpu }}"
            memory: "{{ .Values.resources.ingress.requests.memory }}"
    cni:
      k8s:
        env:
          - name: "GOGC"
            value: "25"
      enabled: true
      namespace: kube-system
  values:
    sidecarInjectorWebhook:
      enableNamespacesByDefault: true
    global:
      istioNamespace: {{ .Release.Namespace }}
      logging:
        level: "default:info"
      logAsJson: true
      imagePullPolicy: IfNotPresent
      jwtPolicy: third-party-jwt
      proxy:
        holdApplicationUntilProxyStarts: true
        resources:
          requests:
            cpu: "{{ .Values.resources.proxy.requests.cpu }}"
            memory: "{{ .Values.resources.proxy.requests.memory }}"
      defaultNodeSelector: 
        neonkube.io/istio: true
      tracer:
        zipkin:
          address: jaeger-collector.monitoring.svc.cluster.local:9411
    gateways:
      istio-ingressgateway:
        type: NodePort
        externalTrafficPolicy: Local
    cni:
      excludeNamespaces:
       - {{.Release.Namespace}}
       - kube-system
       - kube-node-lease
       - kube-public
      logLevel: info