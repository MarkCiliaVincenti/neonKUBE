# Default values for etcd.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

peerPort: 2380
clientPort: 2379
component: "etcd"
replicas: 3
image:
  repository: "ghcr.io/neonkube-dev/coreos-etcd"
  tag: "neonkube-0.3.0-alpha"
  pullPolicy: "IfNotPresent"
resources:
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Authentication parameters
##
auth:
  client:
    ## Switch to encrypt client communication using TLS certificates
    secureTransport: false
    ## Switch to enable host authentication using TLS certificates. Requires existing secret.
    enableAuthentication: false
    ## Name of the existing secret containing cert files for peer communication.
    # existingSecret:

  peer:
    ## Switch to encrypt peer communication using TLS certificates
    secureTransport: false
    ## Switch to automatically create the TLS certificates
    useAutoTLS: false
    ## Switch to enable host authentication using TLS certificates. Requires existing secret.
    enableAuthentication: false

persistentVolume:
  enabled: true
  storage: "1Gi"
  ## etcd data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "neon-internal-etcd"

## This is only available when persistentVolume is false:
## If persistentVolume is not enabled, one can choose to use memory mode for ETCD by setting memoryMode to "true".
## The system will create a volume with "medium: Memory"
memoryMode: false

## Node labels and tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
nodeSelector: 
  neonkube.io/monitor.metrics-internal: 'true'

tolerations:
  - effect: NoSchedule
    operator: Exists
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: etcd
          topologyKey: kubernetes.io/hostname
extraEnv: []

# Merged
podAnnotations:
  sidecar.istio.io/inject: 'false'

podSecurityContext:
  fsGroup: 1001

securityContext:
  capabilities:
    add: ["NET_RAW"]
  runAsNonRoot: true
  runAsUser: 1001

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podMonitor:
  enabled: true
  interval: 60s
  scrapeTimeout: 30s
  scheme: http
  tlsConfig: {}
  #  ca:
  #    secret:
  #      name: existingSecretName
  metricRelabelings: []
  #  - action: labeldrop
  #    regex: "foo.+"
  relabelings: []
  #  - sourceLabels: [__meta_kubernetes_pod_node_name]
  #    targetLabel: instance

# Prometheus Operator alertmanager alerts
prometheusRules:
  enabled: false
  rules: []
  #  - alert: Example
  #    expr: metric == 1
  #    for: 1m
  #    labels:
  #      severity: warning

snapshot:
  restore:
    enabled: false
    claimName:
    fileName:
  backup:
    enabled: false
    schedule: "*/30 * * * *"
    historyLimit: 1
    snapshotHistoryLimit: 1
    # Use existing claim
    claimName:
    # or create a pvc
    size: 10Gi
    storageClassName: default
    resources: {}
