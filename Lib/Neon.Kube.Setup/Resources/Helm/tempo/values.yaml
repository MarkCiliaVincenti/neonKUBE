# -- Overrides the chart's name
nameOverride: "tempo"

# -- Overrides the chart's computed fullname
fullnameOverride: "tempo"

replicas: 1
tempo:
  organization: neon-registry.node.local
  repository: grafana-tempo
  tag: 1.2.1
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName

  updateStrategy: RollingUpdate
  resources: {}
  #  requests:
  #    cpu: 1000m
  #    memory: 4Gi
  #  limits:
  #    cpu: 2000m
  #    memory: 6Gi

  memBallastSizeMbs: 1024
  authEnabled: false
  ingester: {}
  retention: 24h
  server:
    httpListenPort: 3100
  storage:
    trace:
      backend: s3
      s3:
        bucket: tempo
        endpoint: minio.neon-system
        access_key: ${ACCESS_KEY_ID}
        secret_key: ${SECRET_ACCESS_KEY}
        insecure: true
        forcepathstyle: true
        region: neon
  # this configuration will listen on all ports and protocols that tempo is capable of.
  # the receives all come from the OpenTelemetry collector.  more configuration information can
  # be found there: https://github.com/open-telemetry/opentelemetry-collector/tree/master/receiver
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: "0.0.0.0:4317"
  ## Additional container arguments
  extraArgs: {}
  # -- Environment variables to add
  extraEnv:
    - name: ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: minio
          key: accesskey
    - name: SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: minio
          key: secretkey
  # -- Volume mounts to add
  extraVolumeMounts: []
  # - name: extra-volume
  #   mountPath: /mnt/volume
  #   readOnly: true
  #   existingClaim: volume-claim

tempoQuery:
  organization: neon-registry.node.local
  repository: grafana-tempo-query
  tag: 1.2.1
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName
  ## Additional container arguments
  extraArgs: {}
  # -- Environment variables to add
  extraEnv: []
  # -- Volume mounts to add
  extraVolumeMounts: []
  # - name: extra-volume
  #   mountPath: /mnt/volume
  #   readOnly: true
  #   existingClaim: volume-claim

serviceAccount:
  # -- Specifies whether a ServiceAccount should be created
  create: true
  # -- The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name: null
  # -- Image pull secrets for the service account
  imagePullSecrets: []
  # -- Annotations for the service account
  annotations: {}

service:
  type: ClusterIP
  annotations: {}
  labels: {}

persistence:
  enabled: false
  # storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  
## Annotations
annotations:
  reloader.stakater.com/auto: "true"

## Pod Annotations
podAnnotations: []

# -- Volumes to add
extraVolumes: []

nodeSelector:
  neonkube.io/monitor.metrics-internal: 'true'

tolerations:
  - key: "neonkube.io/metrics"
    operator: Exists
    effect: NoSchedule
  - key: "neonkube.io/metrics-internal"
    operator: Exists
    effect: NoSchedule

## Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: tempo
          topologyKey: kubernetes.io/hostname

serviceMonitor:
  enabled: true
  interval: 60s
  additionalLabels: {}
  annotations: {}
  # scrapeTimeout: 10s