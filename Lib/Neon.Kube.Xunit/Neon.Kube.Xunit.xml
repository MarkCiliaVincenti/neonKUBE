<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neon.Kube.Xunit</name>
    </assembly>
    <members>
        <member name="T:Neon.Kube.Xunit.KubernetesFixture">
            <summary>
            Fixture for testing against Kubernetes clusters including optionally
            deploying a neonKUBE cluster.
            </summary>
            <remarks>
            <para>
            </para>
            </remarks>
        </member>
        <member name="M:Neon.Kube.Xunit.KubernetesFixture.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Neon.Kube.Xunit.KubernetesFixture.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Neon.Kube.Xunit.KubernetesFixture.Connect(System.String,System.String,System.String)">
            <summary>
            Connects the Kubernetes cluster specified in the default kubeconfig.  You can explicitly specify
            the configuration file location via <paramref name="kubeconfigPath"/> and override the current 
            context and API server endpoint using the remaining optional parameters.
            </summary>
            <param name="kubeconfigPath">Optionally specifies a specific kubeconfig file.</param>
            <param name="currentContext">Optionally overrides the current context.</param>
            <param name="masterUrl">Optionally overrides the URI for the API server endpoint.</param>
            <returns>The connected <see cref="T:k8s.Kubernetes"/> client.  This will also be available from <see cref="P:Neon.Kube.Xunit.KubernetesFixture.Client"/>.</returns>
        </member>
        <member name="M:Neon.Kube.Xunit.KubernetesFixture.Connect(k8s.KubernetesClientConfiguration)">
            <summary>
            Connects the Kubernetes cluster specified by <see cref="T:k8s.KubernetesClientConfiguration"/>.  You 
            override the current context and API server endpoint using the remaining optional parameters.
            </summary>
            <param name="kubeconfig">Specifies the <see cref="T:k8s.KubernetesClientConfiguration"/>.</param>
            <returns>The connected <see cref="T:k8s.Kubernetes"/> client.  This will also be available from <see cref="P:Neon.Kube.Xunit.KubernetesFixture.Client"/>.</returns>
        </member>
        <member name="M:Neon.Kube.Xunit.KubernetesFixture.Connect(k8s.KubeConfigModels.K8SConfiguration,System.String,System.String)">
            <summary>
            Connects the Kubernetes cluster specified by <see cref="T:k8s.KubeConfigModels.K8SConfiguration"/>.  You  override the current  
            context and API server endpoint using the remaining optional parameters.
            </summary>
            <param name="k8sConfig">The configuration.</param>
            <param name="currentContext">Optionally overrides the current context.</param>
            <param name="masterUrl">Optionally overrides the URI for the API server endpoint.</param>
            <returns>The connected <see cref="T:k8s.Kubernetes"/> client.  This will also be available from <see cref="P:Neon.Kube.Xunit.KubernetesFixture.Client"/>.</returns>
        </member>
        <member name="M:Neon.Kube.Xunit.KubernetesFixture.Deploy(Neon.Kube.ClusterDefinition)">
            <summary>
            Deploys a new cluster as specified by the cluster definition model passed.
            </summary>
            <param name="clusterDefinition">The cluster definition model.</param>
            <returns>The connected <see cref="T:k8s.Kubernetes"/> client.  This will also be available from <see cref="P:Neon.Kube.Xunit.KubernetesFixture.Client"/>.</returns>
        </member>
        <member name="M:Neon.Kube.Xunit.KubernetesFixture.Deploy(System.String)">
            <summary>
            Deploys a new cluster as specified by the cluster definition YAML definition.
            </summary>
            <param name="clusterDefinitionYaml">The cluster definition YAML.</param>
            <returns>The connected <see cref="T:k8s.Kubernetes"/> client.  This will also be available from <see cref="P:Neon.Kube.Xunit.KubernetesFixture.Client"/>.</returns>
        </member>
        <member name="M:Neon.Kube.Xunit.KubernetesFixture.Deploy(System.IO.FileInfo)">
            <summary>
            Deploys a new cluster as specified by a cluster definition YAML file.
            </summary>
            <param name="clusterDefinitionPath">Path to the cluster definition YAML file.</param>
            <returns>The connected <see cref="T:k8s.Kubernetes"/> client.  This will also be available from <see cref="P:Neon.Kube.Xunit.KubernetesFixture.Client"/>.</returns>
        </member>
        <member name="P:Neon.Kube.Xunit.KubernetesFixture.Client">
            <summary>
            Returns the <see cref="T:k8s.Kubernetes"/> client instance that can be used to
            control the attached cluster.
            </summary>
        </member>
        <member name="M:Neon.Kube.Xunit.KubernetesFixture.Reset">
            <inheritdoc/>
        </member>
        <member name="T:Neon.Kube.Xunit.KubeTestHelper">
            <summary>
            Misc local unit test helpers.
            </summary>
        </member>
        <member name="F:Neon.Kube.Xunit.KubeTestHelper.TestUsername">
            <summary>
            <b>ghcr.io/neonrelease/test</b> image test user name.
            </summary>
        </member>
        <member name="F:Neon.Kube.Xunit.KubeTestHelper.TestUID">
            <summary>
            <b>ghcr.io/neonrelease/test</b> image test user ID.
            </summary>
        </member>
        <member name="F:Neon.Kube.Xunit.KubeTestHelper.TestGID">
            <summary>
            <b>ghcr.io/neonrelease/test</b> image test group ID.
            </summary>
        </member>
        <member name="M:Neon.Kube.Xunit.KubeTestHelper.CreateTestFolder(System.Tuple{System.String,System.String}[])">
            <summary>
            Creates and optionally populates a temporary test folder with test files.
            </summary>
            <param name="files">
            The files to be created.  The first item in each tuple entry will be 
            the local file name and the second the contents of the file.
            </param>
            <returns>The <see cref="M:Neon.Kube.Xunit.KubeTestHelper.TempFolder(System.String,System.String)"/>.</returns>
            <remarks>
            <note>
            Ensure that the <see cref="M:Neon.Kube.Xunit.KubeTestHelper.TempFolder(System.String,System.String)"/> returned is disposed so it and
            any files within will be deleted.
            </note>
            </remarks>
        </member>
        <member name="M:Neon.Kube.Xunit.KubeTestHelper.TempFolder(System.String,System.String)">
            <summary>
            Creates and populates a temporary test folder with a test file.
            </summary>
            <param name="data">The file name</param>
            <param name="filename">The file data.</param>
            <returns>The <see cref="M:Neon.Kube.Xunit.KubeTestHelper.TempFolder(System.String,System.String)"/>.</returns>
            <remarks>
            <note>
            Ensure that the <see cref="M:Neon.Kube.Xunit.KubeTestHelper.TempFolder(System.String,System.String)"/> returned is disposed so it and
            any files within will be deleted.
            </note>
            </remarks>
        </member>
        <member name="M:Neon.Kube.Xunit.KubeTestHelper.KubeTestManager">
            <summary>
            Starts and returns a <see cref="M:Neon.Kube.Xunit.KubeTestHelper.KubeTestManager"/> instance.  This will put <see cref="T:Neon.Kube.KubeHelper"/>
            into test mode.  You must dispose the instance before the tests complete to revert back
            to normal mode.
            </summary>
            <returns>The <see cref="M:Neon.Kube.Xunit.KubeTestHelper.KubeTestManager"/>.</returns>
        </member>
        <member name="P:Neon.Kube.Xunit.KubeTestHelper.NeonExePath">
            <summary>
            Returns the path to the <b>neon-cli</b> executable.
            </summary>
        </member>
        <member name="T:Neon.Kube.Xunit.KubeTestManager">
            <summary>
            Creates a temporary folder and puts <see cref="T:Neon.Kube.KubeHelper"/> into test mode
            to support <b>neon-cli</b> unit testing.  <see cref="M:Neon.Kube.Xunit.KubeTestManager.Dispose"/> reverts the 
            test mode and deletes the temporary folder.
            </summary>
        </member>
        <member name="P:Neon.Kube.Xunit.KubeTestManager.Current">
            <summary>
            Returns the current test manager.
            </summary>
        </member>
        <member name="M:Neon.Kube.Xunit.KubeTestManager.#ctor">
            <summary>
            Constructor.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if another test manager instance is active.</exception>
        </member>
        <member name="M:Neon.Kube.Xunit.KubeTestManager.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:Neon.Kube.Xunit.KubeTestManager.TestFolder">
            <summary>
            Returns the path to the temporary test folder.
            </summary>
        </member>
        <member name="T:Neon.Kube.Xunit.NamespaceDoc">
            <summary>
            This namespace includes additional utilties for testing neonKUBE functionality.
            </summary>
        </member>
    </members>
</doc>
