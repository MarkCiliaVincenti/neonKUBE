apiVersion: integreatly.org/v1alpha1
kind: Grafana
metadata:
  name: grafana
spec:
  ingress:
    enabled: False
  config:
    security:
      disable_brute_force_login_protection: true
    log:
      mode: "console"
      level: "debug"
    auth.proxy:
      enabled: true
      # HTTP Header name that will contain the username or email
      header_name: X-WEBAUTH-USER
      # HTTP Header property, defaults to `username` but can also be `email`
      header_property: username
      # Set to `true` to enable auto sign up of users who do not exist in Grafana DB. Defaults to `true`.
      auto_sign_up: true
      # Define cache time to live in minutes
      # If combined with Grafana LDAP integration it is also the sync interval
      sync_ttl: 60
      # Check out docs on this for more details on the below setting
      enable_login_token: false
    database:
      type: postgres
      host: db-citus-postgresql.neon-system.svc.cluster.local
      name: grafana
      user: neon_service
      password: $__env{DATABASE_PASSWORD}
  service:
    name: "grafana"
    labels:
      app: "grafana"
      type: "grafana-service"
    type: NodePort
    ports:
      - name: grafana-nodeport
        protocol: TCP
        port: 3001
        nodePort: 30001
        targetPort: grafana-http
  deployment:
    envFrom:
      - secretRef:
          name: grafana-db-password
    nodeSelector:
      {{- toYaml .Values.nodeSelector | nindent 8 }}
  dashboardLabelSelector:
    - matchExpressions:
        - { key: app, operator: In, values: [ grafana ] }
  # initResources:
  #   # Optionally specify initResources
  #   limits:
  #     cpu: 1000m
  #     memory: 512Mi
  #   requests:
  #     cpu: 250m
  #     memory: 128Mi
  resources:
    # Optionally specify container resources
    limits:
      memory: {{ .Values.resources.limits.memory }}
    requests:
      memory: {{ .Values.resources.requests.memory }}
