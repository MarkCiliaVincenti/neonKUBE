<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neon.Kube.Services</name>
    </assembly>
    <members>
        <member name="T:Neon.Kube.NeonServiceMap">
            <summary>
            Holds more detailed information describing the Neon cluster services.  This a
            <see cref="T:Neon.Service.ServiceMap"/> keyed by the service names defined in <see cref="T:Neon.Kube.NeonServices"/>
            and the class also has properties named for each service you can use as a shortcut.
            </summary>
            <remarks>
            <note>
            The default constructor builds a <see cref="T:Neon.Kube.NeonServiceMap"/> for all environments, and clones
            them for each Dev's workstation in the Neon Office, setting the correct static IP.
            </note>
            </remarks>
        </member>
        <member name="F:Neon.Kube.NeonServiceMap.DefaultEndpointName">
            <summary>
            The default service endpoint name.
            </summary>
        </member>
        <member name="F:Neon.Kube.NeonServiceMap.serviceMaps">
            <summary>
            Returns a dictionary holding all service maps.
            </summary>
        </member>
        <member name="P:Neon.Kube.NeonServiceMap.Production">
            <summary>
            Returns the Production internal service map.
            </summary>
        </member>
        <member name="M:Neon.Kube.NeonServiceMap.GetMapName(System.String)">
            <summary>
            Returns the $NAME service map.
            </summary>
        </member>
        <member name="M:Neon.Kube.NeonServiceMap.#cctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Neon.Kube.NeonServiceMap.VerifyInit(Neon.Kube.NeonServiceMap)">
            <summary>
            Ensure that the service description properties have been initialized
            for all service endpoints.
            </summary>
            <param name="map">The service map.</param>
        </member>
        <member name="M:Neon.Kube.NeonServiceMap.BuildProduction">
            <summary>
            Builds the <see cref="T:Neon.Kube.NeonServiceMap"/> for internal production services.
            </summary>
        </member>
        <member name="M:Neon.Kube.NeonServiceMap.CloneWithNewAdress(Neon.Kube.NeonServiceMap,System.String)">
            <summary>
            Clones a <see cref="T:Neon.Kube.NeonServiceMap"/> and changes the <see cref="P:Neon.Service.ServiceDescription.Address"/> for each of the services.
            </summary>
        </member>
        <member name="M:Neon.Kube.NeonServiceMap.AddServiceDescription(System.String,Neon.Service.ServiceEndpoint,System.String)">
            <summary>
            Adds a <see cref="T:Neon.Service.ServiceDescription"/> for the named service using
            default details and specifying an optional network endpoint.
            </summary>
            <param name="serviceName">The service name.</param>
            <param name="endpoint">Optionally specifies a single service endpoint.</param>
            <param name="namespace">The K8s namespace where the service is deployed.</param>
            <returns>
            The <see cref="T:Neon.Service.ServiceDescription"/> so that it can be customized further if necessary.
            </returns>
            <remarks>
            This method also initializes any service endpoint <see cref="P:Neon.Service.ServiceEndpoint.ServiceDescription"/>
            properties to the service description being created and initializes blank or <c>null</c> endpoint
            names to <see cref="F:Neon.Kube.NeonServiceMap.DefaultEndpointName"/>.
            </remarks>
        </member>
        <member name="M:Neon.Kube.NeonServiceMap.AddServiceDescription(System.String,System.Collections.Generic.IEnumerable{Neon.Service.ServiceEndpoint})">
            <summary>
            Adds a <see cref="T:Neon.Service.ServiceDescription"/> for the named service using
            default details with a set of network endpoints.
            </summary>
            <param name="serviceName">The service name or <c>null</c>.</param>
            <param name="endpoints">The service's network endpoints.</param>
            <returns>
            The <see cref="T:Neon.Service.ServiceDescription"/> so that it can be customized further if necessary.
            </returns>
            <remarks>
            This method also initializes any service endpoints <see cref="P:Neon.Service.ServiceEndpoint.ServiceDescription"/>
            properties to the service description being created and initializes blank or <c>null</c> endpoint
            names to <see cref="F:Neon.Kube.NeonServiceMap.DefaultEndpointName"/>.
            </remarks>
        </member>
        <member name="M:Neon.Kube.NeonServiceMap.Lookup(System.String)">
            <summary>
            Returns the <see cref="T:Neon.Service.ServiceDescription"/> for the given service name.
            </summary>
            <param name="serviceName">The service name.</param>
            <returns>The associated <see cref="T:Neon.Service.ServiceDescription"/>.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown if thre service map has no description for the service.</exception>
        </member>
        <member name="T:Neon.Kube.NeonServices">
            <summary>
            Defines the Neon service names.  
            </summary>
        </member>
        <member name="F:Neon.Kube.NeonServices.ClusterOperator">
            <summary>
            Cluster operator.
            </summary>
        </member>
        <member name="F:Neon.Kube.NeonServices.IdentityService">
            <summary>
            Neon identity service, AKA a Secure Token Service (STS).
            </summary>
        </member>
        <member name="F:Neon.Kube.NeonServices.IdentityOperator">
            <summary>
            Operator that manages the <see cref="F:Neon.Kube.NeonServices.IdentityService"/> instances as well as
            the related database.
            </summary>
        </member>
        <member name="F:Neon.Kube.NeonServices.SetupGrafana">
            <summary>
            Service that runs Grafana setup.
            </summary>
        </member>
        <member name="F:Neon.Kube.NeonServices.SetupHarbor">
            <summary>
            Service that runs Harbor setup.
            </summary>
        </member>
        <member name="F:Neon.Kube.NeonServices.TestCadence">
            <summary>
            Non-production service used to test Cadence running in a Linux container.
            </summary>
        </member>
        <member name="F:Neon.Kube.NeonServices.TestTemporal">
            <summary>
            Non-production service used to test Temporal running in a Linux container.
            </summary>
        </member>
    </members>
</doc>
