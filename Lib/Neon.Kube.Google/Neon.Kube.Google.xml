<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neon.Kube.Google</name>
    </assembly>
    <members>
        <member name="T:Neon.Kube.GoogleHostingManager">
            <summary>
            Manages cluster provisioning on the Google Cloud Platform.
            </summary>
        </member>
        <member name="M:Neon.Kube.GoogleHostingManager.Load">
            <summary>
            Ensures that the assembly hosting this hosting manager is loaded.
            </summary>
        </member>
        <member name="M:Neon.Kube.GoogleHostingManager.#ctor">
            <summary>
            Creates an instance that is only capable of validating the hosting
            related options in the cluster definition.
            </summary>
        </member>
        <member name="M:Neon.Kube.GoogleHostingManager.#ctor(Neon.Kube.ClusterProxy,System.String)">
            <summary>
            Creates an instance that is capable of provisioning a cluster on Google Cloud.
            </summary>
            <param name="cluster">The cluster being managed.</param>
            <param name="logFolder">
            The folder where log files are to be written, otherwise or <c>null</c> or 
            empty if logging is disabled.
            </param>
        </member>
        <member name="M:Neon.Kube.GoogleHostingManager.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Neon.Kube.GoogleHostingManager.HostingEnvironment">
            <inheritdoc/>
        </member>
        <member name="P:Neon.Kube.GoogleHostingManager.RequiresNodeAddressCheck">
            <inheritdoc/>
        </member>
        <member name="M:Neon.Kube.GoogleHostingManager.Validate(Neon.Kube.ClusterDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:Neon.Kube.GoogleHostingManager.AddProvisioningSteps(Neon.Kube.SetupController{Neon.Kube.NodeDefinition})">
            <inheritdoc/>
        </member>
        <member name="M:Neon.Kube.GoogleHostingManager.AddDeprovisoningSteps(Neon.Kube.SetupController{Neon.Kube.NodeDefinition})">
            <inheritdoc/>
        </member>
        <member name="P:Neon.Kube.GoogleHostingManager.CanManageRouter">
            <inheritdoc/>
        </member>
        <member name="M:Neon.Kube.GoogleHostingManager.UpdateInternetRoutingAsync">
            <inheritdoc/>
        </member>
        <member name="M:Neon.Kube.GoogleHostingManager.EnableInternetSshAsync">
            <inheritdoc/>
        </member>
        <member name="M:Neon.Kube.GoogleHostingManager.DisableInternetSshAsync">
            <inheritdoc/>
        </member>
        <member name="M:Neon.Kube.GoogleHostingManager.GetSshEndpoint(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neon.Kube.GoogleHostingManager.GetDataDisk(Neon.SSH.LinuxSshProxy)">
            <inheritdoc/>
        </member>
    </members>
</doc>
