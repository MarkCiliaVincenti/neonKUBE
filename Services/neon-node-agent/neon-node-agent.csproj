<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <OutputType>Exe</OutputType>
    <IsPackable>false</IsPackable>
    <LangVersion>latest</LangVersion>
    <RootNamespace>NeonNodeAgent</RootNamespace>
    <LangVersion>latest</LangVersion>
    <ServerGarbageCollection>true</ServerGarbageCollection>
    <ConcurrentGarbageCollection>true</ConcurrentGarbageCollection>
    <AssemblyName>neon-node-agent</AssemblyName>
    <Configurations>Debug;Release;CodeDoc</Configurations>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <GenerateTargetFrameworkAttribute>true</GenerateTargetFrameworkAttribute>

  	<!-- Write generated installation YAML to an git-ignored folder -->

	<KubeOpsConfigRoot>config.gitignore</KubeOpsConfigRoot>
	<KubeOpsSkipDockerfile>true</KubeOpsSkipDockerfile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants />
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='CodeDoc|AnyCPU'">
    <DefineConstants />
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Resources\**" />
    <EmbeddedResource Remove="Resources\**" />
    <None Remove="Resources\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="KubeOps" Version="6.2.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Lib\Neon.Common\Neon.Common.csproj" />
    <ProjectReference Include="..\..\Lib\Neon.Kube.Resources\Neon.Kube.Resources.csproj" />
    <ProjectReference Include="..\..\Lib\Neon.Kube.Operator\Neon.Kube.Operator.csproj" />
    <ProjectReference Include="..\..\Lib\Neon.Kube\Neon.Kube.csproj" />
    <ProjectReference Include="..\..\Lib\Neon.Service\Neon.Service.csproj" />
  </ItemGroup>

  <!-- 
  The KubeOps config file generator doesn't rebuild the files when the config output
  directory already exists.  We're going to delete this folder to ensure that these
  files are always regenerated.
  -->

  <Target Name="RemoveConfig">
    <RemoveDir Directories="$(ProjectDir)config.gitignore" />
  </Target>

</Project>
